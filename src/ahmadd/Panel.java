/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ahmadd;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Dell 5415
 */

public class Panel extends javax.swing.JPanel {
private String alurcin=null;
private String aluurcin=null;
private String killer=null;
private String kiler=null;
private String q=null;
private String qq=null;
private String aa=null;
    /**
     * Creates new form Panel
     */
    public Panel(String cc) {
        initComponents();
        
        aa=cc;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        textField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 51, 51));
        setPreferredSize(new java.awt.Dimension(1095, 685));

        table.setBackground(new java.awt.Color(255, 255, 255));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ажилтаны код", "Компани", "Овог нэр", "2012 оноос өмнө т/гарсан", "2013 оноос өмнө т/гарсан", "Одоо компанид ажиллаж байгаа ахмад"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setPreferredWidth(5);
            table.getColumnModel().getColumn(1).setPreferredWidth(100);
            table.getColumnModel().getColumn(2).setPreferredWidth(100);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(3).setPreferredWidth(100);
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(4).setPreferredWidth(100);
            table.getColumnModel().getColumn(5).setPreferredWidth(250);
        }

        textField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1095, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 13, Short.MAX_VALUE)
                .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldActionPerformed
        // TODO add your handling code here:
           String searchQuery = textField.getText().trim();
        // Check if the search query is empty
        if (searchQuery.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Хайлт хоосон байж болохгүй.");
        } else {
               try {
                   performSearch(searchQuery);
               } catch (SQLException ex) {
                   Logger.getLogger(Panel.class.getName()).log(Level.SEVERE, null, ex);
               }
        }   
    }//GEN-LAST:event_textFieldActionPerformed
    private void performSearch(String searchQuery) throws SQLException {
        DefaultTableModel searchResultModel = (DefaultTableModel) table.getModel();
        searchResultModel.setRowCount(0);
        Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/ahmad", "root", "Tuugii0713"); // e1.printStackTrace();
        if(aa=="k_holding"){
            if (searchQuery.equalsIgnoreCase("all")) {
            // Fetch all students
            String query = "SELECT * FROM ahmad.sudalgaa where company='Кашмер Холдинг';";
            try (Statement statement = connection.createStatement();
                    ResultSet resultSet = statement.executeQuery(query)) {
                while (resultSet.next()) {
                    int bcodeField = resultSet.getInt("a_code");
                    String UovogField = resultSet.getString("company");
                    String ovogField = resultSet.getString("ovog");
                    String nerField = resultSet.getString("ner");
                    String rd = resultSet.getString("arvan_hoyr");
                    if(rd=="1"){
                    alurcin="Тийм";
                    }else{
                    alurcin=" ";
                    }
                    String utas = resultSet.getString("arvan_gurav");
                    if(utas=="1"){
                    aluurcin="Тийм";
                    }else{
                    aluurcin=" "; 
                    }
                    String ger = resultSet.getString("odoo_ajillaj");
                    if(ger=="1"){
                    qq="Одоо ажиллаж байгаа";   
                    }else{
                    qq=" ";
                    }
                   
                    searchResultModel.addRow(new Object[]{bcodeField, UovogField,ovogField+nerField, alurcin, aluurcin,qq});
                }
            }
        } else {
            // Perform a regular search
            String query = "SELECT * FROM ahmad.sudalgaa where company='Кашмер Холдинг'and ner like ? ;";
            
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                String wildcardSearchQuery = "%" + searchQuery + "%";
                preparedStatement.setString(1, wildcardSearchQuery);
                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                    while (resultSet.next()) {
                        int bcodeField = resultSet.getInt("a_code");
                        String UovogField = resultSet.getString("company");
                        String ovogField = resultSet.getString("ovog");
                        String nerField = resultSet.getString("ner");
                        String rd = resultSet.getString("arvan_hoyr");
                        if(rd=="1"){
                        killer="Тийм";
                        }else{
                        killer=" ";
                        }
                        String utas = resultSet.getString("arvan_gurav");
                        if(utas=="1"){
                        kiler="Тийм";
                        }else{
                        kiler=" "; 
                        }
                        String ger = resultSet.getString("odoo_ajillaj");
                        if(ger=="1"){
                        q="Одоо ажиллаж байгаа";
                        }else{
                        q=" ";
                        }
                    
                        searchResultModel.addRow(new Object[]{bcodeField, UovogField, ovogField+nerField, killer, kiler,q});
                    }
                }
            }
        }
    }
                if(aa=="m_myndas"){
            if (searchQuery.equalsIgnoreCase("all")) {
            // Fetch all students
            String query = "SELECT * FROM ahmad.sudalgaa where company='Мон-Мяндас';";
            try (Statement statement = connection.createStatement();
                    ResultSet resultSet = statement.executeQuery(query)) {
                while (resultSet.next()) {
                    int bcodeField = resultSet.getInt("a_code");
                    String UovogField = resultSet.getString("company");
                    String ovogField = resultSet.getString("ovog");
                    String nerField = resultSet.getString("ner");
                    String rd = resultSet.getString("arvan_hoyr");
                    if(rd=="1"){
                    alurcin="Тийм";
                    }else{
                    alurcin=" ";
                    }
                    String utas = resultSet.getString("arvan_gurav");
                    if(utas=="1"){
                    aluurcin="Тийм";
                    }else{
                    aluurcin=" "; 
                    }
                    String ger = resultSet.getString("odoo_ajillaj");
                    if(ger=="1"){
                    qq="Одоо ажиллаж байгаа";   
                    }else{
                    qq=" ";
                    }
                   
                    searchResultModel.addRow(new Object[]{bcodeField, UovogField,ovogField+nerField, alurcin, aluurcin,qq});
                }
            }
        } else {
            // Perform a regular search
            String query = "SELECT * FROM ahmad.sudalgaa where company='Мон-Мяндас'and ner like ? ;";
            
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                String wildcardSearchQuery = "%" + searchQuery + "%";
                preparedStatement.setString(1, wildcardSearchQuery);
                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                    while (resultSet.next()) {
                        int bcodeField = resultSet.getInt("a_code");
                        String UovogField = resultSet.getString("company");
                        String ovogField = resultSet.getString("ovog");
                        String nerField = resultSet.getString("ner");
                        String rd = resultSet.getString("arvan_hoyr");
                        if(rd=="1"){
                        killer="Тийм";
                        }else{
                        killer=" ";
                        }
                        String utas = resultSet.getString("arvan_gurav");
                        if(utas=="1"){
                        kiler="Тийм";
                        }else{
                        kiler=" "; 
                        }
                        String ger = resultSet.getString("odoo_ajillaj");
                        if(ger=="1"){
                        q="Одоо ажиллаж байгаа";
                        }else{
                        q=" ";
                        }
                    
                        searchResultModel.addRow(new Object[]{bcodeField, UovogField, ovogField+nerField, killer, kiler,q});
                    }
                }
            }
        }
    }
                 if(aa=="h_shonhor"){
            if (searchQuery.equalsIgnoreCase("all")) {
            // Fetch all students
            String query = "SELECT * FROM ahmad.sudalgaa where company='Хавт Шонхор';";
            try (Statement statement = connection.createStatement();
                    ResultSet resultSet = statement.executeQuery(query)) {
                while (resultSet.next()) {
                    int bcodeField = resultSet.getInt("a_code");
                    String UovogField = resultSet.getString("company");
                    String ovogField = resultSet.getString("ovog");
                    String nerField = resultSet.getString("ner");
                    String rd = resultSet.getString("arvan_hoyr");
                    if(rd=="1"){
                    alurcin="Тийм";
                    }else{
                    alurcin=" ";
                    }
                    String utas = resultSet.getString("arvan_gurav");
                    if(utas=="1"){
                    aluurcin="Тийм";
                    }else{
                    aluurcin=" "; 
                    }
                    String ger = resultSet.getString("odoo_ajillaj");
                    if(ger=="1"){
                    qq="Одоо ажиллаж байгаа";   
                    }else{
                    qq=" ";
                    }
                   
                    searchResultModel.addRow(new Object[]{bcodeField, UovogField,ovogField+nerField, alurcin, aluurcin,qq});
                }
            }
        } else {
            // Perform a regular search
            String query = "SELECT * FROM ahmad.sudalgaa where company='Хавт Шонхор'and ner like ? ;";
            
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                String wildcardSearchQuery = "%" + searchQuery + "%";
                preparedStatement.setString(1, wildcardSearchQuery);
                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                    while (resultSet.next()) {
                        int bcodeField = resultSet.getInt("a_code");
                        String UovogField = resultSet.getString("company");
                        String ovogField = resultSet.getString("ovog");
                        String nerField = resultSet.getString("ner");
                        String rd = resultSet.getString("arvan_hoyr");
                        if(rd=="1"){
                        killer="Тийм";
                        }else{
                        killer=" ";
                        }
                        String utas = resultSet.getString("arvan_gurav");
                        if(utas=="1"){
                        kiler="Тийм";
                        }else{
                        kiler=" "; 
                        }
                        String ger = resultSet.getString("odoo_ajillaj");
                        if(ger=="1"){
                        q="Одоо ажиллаж байгаа";
                        }else{
                        q=" ";
                        }
                    
                        searchResultModel.addRow(new Object[]{bcodeField, UovogField, ovogField+nerField, killer, kiler,q});
                    }
                }
            }
        }
    }
                 if(aa=="e_od"){
            if (searchQuery.equalsIgnoreCase("all")) {
            // Fetch all students
            String query = "SELECT * FROM ahmad.sudalgaa where company='Эвсэг-Од';";
            try (Statement statement = connection.createStatement();
                    ResultSet resultSet = statement.executeQuery(query)) {
                while (resultSet.next()) {
                    int bcodeField = resultSet.getInt("a_code");
                    String UovogField = resultSet.getString("company");
                    String ovogField = resultSet.getString("ovog");
                    String nerField = resultSet.getString("ner");
                    String rd = resultSet.getString("arvan_hoyr");
                    if(rd=="1"){
                    alurcin="Тийм";
                    }else{
                    alurcin=" ";
                    }
                    String utas = resultSet.getString("arvan_gurav");
                    if(utas=="1"){
                    aluurcin="Тийм";
                    }else{
                    aluurcin=" "; 
                    }
                    String ger = resultSet.getString("odoo_ajillaj");
                    if(ger=="1"){
                    qq="Одоо ажиллаж байгаа";   
                    }else{
                    qq=" ";
                    }
                   
                    searchResultModel.addRow(new Object[]{bcodeField, UovogField,ovogField+nerField, alurcin, aluurcin,qq});
                }
            }
        } else {
            // Perform a regular search
            String query = "SELECT * FROM ahmad.sudalgaa where company='Эвсэг-Од'and ner like ? ;";
            
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                String wildcardSearchQuery = "%" + searchQuery + "%";
                preparedStatement.setString(1, wildcardSearchQuery);
                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                    while (resultSet.next()) {
                        int bcodeField = resultSet.getInt("a_code");
                        String UovogField = resultSet.getString("company");
                        String ovogField = resultSet.getString("ovog");
                        String nerField = resultSet.getString("ner");
                        String rd = resultSet.getString("arvan_hoyr");
                        if(rd=="1"){
                        killer="Тийм";
                        }else{
                        killer=" ";
                        }
                        String utas = resultSet.getString("arvan_gurav");
                        if(utas=="1"){
                        kiler="Тийм";
                        }else{
                        kiler=" "; 
                        }
                        String ger = resultSet.getString("odoo_ajillaj");
                        if(ger=="1"){
                        q="Одоо ажиллаж байгаа";
                        }else{
                        q=" ";
                        }
                    
                        searchResultModel.addRow(new Object[]{bcodeField, UovogField, ovogField+nerField, killer, kiler,q});
                    }
                }
            }
        }
    }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField textField;
    // End of variables declaration//GEN-END:variables
}
